{
    "extends": [
        "plugin:security-node/recommended",
        "plugin:promise/recommended"
    ],
    "plugins": [
        "security-node",
        "promise",
        "no-unsanitized",
        "sonarjs"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "ecmaVersion": 2022,
        "sourceType": "module",
        "project": "./tsconfig.eslint.json",
        "warnOnUnsupportedTypeScriptVersion": false
    },
    "rules": {
        "no-unsanitized/method": "error",
        "no-unsanitized/property": "error",
        "eol-last": ["error", "always"],
        "quotes": ["error", "single"],

        "security-node/detect-child-process": "error",
        "security-node/detect-eval-with-expr": "error",
        "security-node/detect-non-literal-require-calls": "warn",
        "security-node/non-literal-reg-expr": "error",
        "security-node/detect-html-injection": "error",
        "security-node/detect-sql-injection": "error",
        "security-node/detect-unhandled-async-errors": "error",
        "security-node/detect-possible-timing-attacks": "error",
        "security-node/detect-nosql-injection": "error",
        "security-node/detect-security-missconfiguration-cookie": "error",
        "security-node/detect-dangerous-redirects": "error",
        "security-node/detect-insecure-randomness": "error",

        "sonarjs/no-all-duplicated-branches": "error",
        "sonarjs/no-element-overwrite": "error",
        "sonarjs/no-identical-conditions": "error",
        "sonarjs/no-identical-expressions": "error",
        "sonarjs/no-one-iteration-loop": "error",
        "sonarjs/no-use-of-empty-return-value": "error",
        "sonarjs/no-extra-arguments": "error",
        "sonarjs/no-identical-functions": "error",
        "sonarjs/no-duplicated-branches": "error",
        "sonarjs/cognitive-complexity": [
            "error",
            15
        ]
    }
}
